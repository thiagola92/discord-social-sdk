<?xml version="1.0" encoding="UTF-8" ?>
<class xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="DiscordppCall" inherits="RefCounted" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/godotengine/godot/master/doc/class.xsd">
	<brief_description>
	</brief_description>
	<description>
 Class that manages an active voice session in a Lobby.

Reference: [url]https://discord.com/developers/docs/social-sdk/classdiscordpp_1_1Call.html[/url]
</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="Drop">
			<return type="void" />
			<description>

</description>
		</method>
		<method name="ErrorToString" qualifiers="static">
			<return type="String" />
			<param index="0" name="type" type="int" enum="DiscordppCallError.Enum" />
			<description>
 Converts the Error enum to a string.
</description>
		</method>
		<method name="GetAudioMode">
			<return type="int" enum="DiscordppAudioModeType.Enum" />
			<description>
 Returns whether the call is configured to use voice auto detection or push to talk for the current user.
</description>
		</method>
		<method name="GetChannelId">
			<return type="int" />
			<description>
 Returns the ID of the lobby with which this call is associated.
</description>
		</method>
		<method name="GetGuildId">
			<return type="int" />
			<description>
 Returns the ID of the lobby with which this call is associated.
</description>
		</method>
		<method name="GetLocalMute">
			<return type="bool" />
			<param index="0" name="userId" type="int" />
			<description>
 Returns whether the current user has locally muted the given userId for themselves.
</description>
		</method>
		<method name="GetPTTActive">
			<return type="bool" />
			<description>
 Returns whether push to talk is currently active, meaning the user is currently pressing their configured push to talk key.
</description>
		</method>
		<method name="GetPTTReleaseDelay">
			<return type="int" />
			<description>
 Returns the time that PTT is active after the user releases the PTT key and SetPTTActive(false) is called.
</description>
		</method>
		<method name="GetParticipantVolume">
			<return type="float" />
			<param index="0" name="userId" type="int" />
			<description>
 Returns the locally set playout volume of the given userId.
 Does not affect the volume of this user for any other connected clients. The range of volume is [0, 200], where 100 indicate default audio volume of the playback device.
</description>
		</method>
		<method name="GetParticipants">
			<return type="int[]" />
			<description>
 Returns a list of all of the user IDs of the participants in the call.
</description>
		</method>
		<method name="GetSelfDeaf">
			<return type="bool" />
			<description>
 Returns whether the current user is deafened.
</description>
		</method>
		<method name="GetSelfMute">
			<return type="bool" />
			<description>
 Returns whether the current user's microphone is muted.
</description>
		</method>
		<method name="GetStatus">
			<return type="int" enum="DiscordppCallStatus.Enum" />
			<description>
 Returns the current call status.
 A call is not ready to be used until the status changes to "Connected".
</description>
		</method>
		<method name="GetVADThreshold">
			<return type="DiscordppVADThresholdSettings" />
			<description>
 Returns the current configuration for void auto detection thresholds. See the description of the VADThreshold struct for specifics.
</description>
		</method>
		<method name="GetVoiceStateHandle">
			<return type="Variant" />
			<param index="0" name="userId" type="int" />
			<description>
 Returns a reference to the VoiceStateHandle for the user ID of the given call participant.
 The VoiceStateHandle allows other users to know if the target user has muted or deafened themselves.
Returns [DiscordppVoiceStateHandle] or [code]null[/code].
</description>
		</method>
		<method name="SetAudioMode">
			<return type="void" />
			<param index="0" name="audioMode" type="int" enum="DiscordppAudioModeType.Enum" />
			<description>
 Sets whether to use voice auto detection or push to talk for the current user on this call.
 If using push to talk you should call SetPTTActive() whenever the user presses their confused push to talk key.
</description>
		</method>
		<method name="SetLocalMute">
			<return type="void" />
			<param index="0" name="userId" type="int" />
			<param index="1" name="mute" type="bool" />
			<description>
 Locally mutes the given userId, so that the current user cannot hear them anymore.
 Does not affect whether the given user is muted for any other connected clients.
</description>
		</method>
		<method name="SetOnVoiceStateChangedCallback">
			<return type="void" />
			<param index="0" name="cb" type="Callable" />
			<description>
 Sets a callback function to generally be invoked whenever a field on a VoiceStateHandle object for a user would have changed.
 For example when a user mutes themselves, all other connected clients will invoke the VoiceStateChanged callback, because the "self mute" field will be true now. The callback is generally not invoked when users join or leave channels.

Where [param cb] signature is:
[codeblock]
func(userId: int)
[/codeblock]
</description>
		</method>
		<method name="SetPTTActive">
			<return type="void" />
			<param index="0" name="active" type="bool" />
			<description>
 When push to talk is enabled, this should be called whenever the user pushes or releases their configured push to talk key. This key must be configured in the game, the SDK does not handle keybinds itself.
</description>
		</method>
		<method name="SetPTTReleaseDelay">
			<return type="void" />
			<param index="0" name="releaseDelayMs" type="int" />
			<description>
 If set, extends the time that PTT is active after the user releases the PTT key and SetPTTActive(false) is called.
 Defaults to no release delay, but we recommend setting to 20ms, which is what Discord uses.
</description>
		</method>
		<method name="SetParticipantChangedCallback">
			<return type="void" />
			<param index="0" name="cb" type="Callable" />
			<description>
 Sets a callback function to be invoked whenever some joins or leaves a voice call.

Where [param cb] signature is:
[codeblock]
func(userId: int, added: bool)
[/codeblock]
</description>
		</method>
		<method name="SetParticipantVolume">
			<return type="void" />
			<param index="0" name="userId" type="int" />
			<param index="1" name="volume" type="float" />
			<description>
 Locally changes the playout volume of the given userId.
 Does not affect the volume of this user for any other connected clients. The range of volume is [0, 200], where 100 indicate default audio volume of the playback device.
</description>
		</method>
		<method name="SetSelfDeaf">
			<return type="void" />
			<param index="0" name="deaf" type="bool" />
			<description>
 Mutes all audio from the currently active call for the current user. They will not be able to hear any other participants, and no other participants will be able to hear the current user either.
</description>
		</method>
		<method name="SetSelfMute">
			<return type="void" />
			<param index="0" name="mute" type="bool" />
			<description>
 Mutes the current user's microphone so that no other participant in their active calls can hear them.
</description>
		</method>
		<method name="SetSpeakingStatusChangedCallback">
			<return type="void" />
			<param index="0" name="cb" type="Callable" />
			<description>
 Sets a callback function to be invoked whenever a user starts or stops speaking and is passed in the userId and whether they are currently speaking.
 It can be invoked in other cases as well, such as if the priority speaker changes or if the user plays a soundboard sound.

Where [param cb] signature is:
[codeblock]
func(userId: int, isPlayingSound: bool)
[/codeblock]
</description>
		</method>
		<method name="SetStatusChangedCallback">
			<return type="void" />
			<param index="0" name="cb" type="Callable" />
			<description>
 Sets a callback function to be invoked when the call status changes, such as when it fully connects or starts reconnecting.

Where [param cb] signature is:
[codeblock]
func(status: DiscordppCallStatus.Enum, error: DiscordppCallError.Enum, errorDetail: int)
[/codeblock]
</description>
		</method>
		<method name="SetVADThreshold">
			<return type="void" />
			<param index="0" name="automatic" type="bool" />
			<param index="1" name="threshold" type="float" />
			<description>
 Customizes the void auto detection thresholds for picking up activity from a user's mic. [br]- When automatic is set to True, Discord will automatically detect the appropriate threshold to use. [br]- When automatic is set to False, the given threshold value will be used. Threshold has a range of -100, 0, and defaults to -60.
</description>
		</method>
		<method name="StatusToString" qualifiers="static">
			<return type="String" />
			<param index="0" name="type" type="int" enum="DiscordppCallStatus.Enum" />
			<description>
 Converts the Status enum to a string.
</description>
		</method>
	</methods>
</class>
