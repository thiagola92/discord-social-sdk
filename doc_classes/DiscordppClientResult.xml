<?xml version="1.0" encoding="UTF-8" ?>
<class xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="DiscordppClientResult" inherits="RefCounted" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/godotengine/godot/master/doc/class.xsd">
	<brief_description>
	</brief_description>
	<description>
 Struct that stores information about the result of an SDK function call.
 Functions can fail for a few reasons including: [br]- The Client is not yet ready and able to perform the action. [br]- The inputs passed to the function are invalid. [br]- The function makes an API call to Discord's backend which returns an error. [br]- The user is offline.
 The ClientResult::Type field is used to to distinguish between the above types of failures

Reference: [url]https://discord.com/developers/docs/social-sdk/classdiscordpp_1_1ClientResult.html[/url]
</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="Drop">
			<return type="void" />
			<description>

</description>
		</method>
		<method name="Error">
			<return type="String" />
			<description>
 A description of the error that occurred.
</description>
		</method>
		<method name="ErrorCode">
			<return type="int" />
			<description>
 A more detailed error code for this failure. Currently the only use of this is when an API request is made to Discord's backend and that fails with a specific error, that error will be included in this field.
 Many of these error codes are documented at: https://discord.com/developers/docs/topics/opcodes-and-status-codes#json
 This will only be set if the type of error is ErrorType::HTTPError
</description>
		</method>
		<method name="ResponseBody">
			<return type="String" />
			<description>
 The full HTTP response body, which will usually be a JSON string.
 The error format here is a bit more complicated because Discord's API tries to make it clear which field from the request is causing the error. Documentation on the format of these errors is here: https://discord.com/developers/docs/reference#error-messages
 This will only be set if the type of error is ErrorType::HTTPError
</description>
		</method>
		<method name="RetryAfter">
			<return type="float" />
			<description>
 When a user is being rate limited by Discord (and so status == 429), this field should be set and is the number of seconds to wait before trying again.
</description>
		</method>
		<method name="Retryable">
			<return type="bool" />
			<description>
 Indicates if, although an API request failed, it is safe and recommended to retry it.
</description>
		</method>
		<method name="SetError">
			<return type="void" />
			<param index="0" name="Error" type="String" />
			<description>
 Setter for ClientResult::Error.
</description>
		</method>
		<method name="SetErrorCode">
			<return type="void" />
			<param index="0" name="ErrorCode" type="int" />
			<description>
 Setter for ClientResult::ErrorCode.
</description>
		</method>
		<method name="SetResponseBody">
			<return type="void" />
			<param index="0" name="ResponseBody" type="String" />
			<description>
 Setter for ClientResult::ResponseBody.
</description>
		</method>
		<method name="SetRetryAfter">
			<return type="void" />
			<param index="0" name="RetryAfter" type="float" />
			<description>
 Setter for ClientResult::RetryAfter.
</description>
		</method>
		<method name="SetRetryable">
			<return type="void" />
			<param index="0" name="Retryable" type="bool" />
			<description>
 Setter for ClientResult::Retryable.
</description>
		</method>
		<method name="SetStatus">
			<return type="void" />
			<param index="0" name="Status" type="int" enum="DiscordppHttpStatusCode.Enum" />
			<description>
 Setter for ClientResult::Status.
</description>
		</method>
		<method name="SetSuccessful">
			<return type="void" />
			<param index="0" name="Successful" type="bool" />
			<description>
 Setter for ClientResult::Successful.
</description>
		</method>
		<method name="SetType">
			<return type="void" />
			<param index="0" name="Type" type="int" enum="DiscordppErrorType.Enum" />
			<description>
 Setter for ClientResult::Type.
</description>
		</method>
		<method name="Status">
			<return type="int" enum="DiscordppHttpStatusCode.Enum" />
			<description>
 The HTTP status code of the API call.
 This will only be set if the type of error is ErrorType::HTTPError
</description>
		</method>
		<method name="Successful">
			<return type="bool" />
			<description>
 Equivalent to type == ErrorType::None
</description>
		</method>
		<method name="ToString">
			<return type="String" />
			<description>
 Returns the error message if any of the ClientResult.
</description>
		</method>
		<method name="Type">
			<return type="int" enum="DiscordppErrorType.Enum" />
			<description>
 The type of error that occurred. See ErrorType for more information.
</description>
		</method>
	</methods>
</class>
